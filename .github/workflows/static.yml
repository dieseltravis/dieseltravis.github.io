# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  pages-directory-listing:
    runs-on: ubuntu-latest
    name: Directory Listings Index
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout Repository (again?)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: git
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
      - name: Set gif env
        run: echo GIF_DATES=$(for f in $(git ls-files *.gif); do git --no-pager log -1 --date=short --pretty=format:"$f|%ci!" -- $f ; done) >> $GITHUB_ENV
      - name: Test gifs
        run: echo $GIF_DATES
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Generate gifs Directory Listings
        uses: dieseltravis/github-pages-directory-listing@dieseltravis-html
        with:
          FOLDER: 'gifs'      #directory to generate index
          GIF_DATES: ${{ env.GIF_DATES }}
      - name: Set imgs env
        run: echo IMGS_DATES=$(for f in $(git ls-files imgs/*.*); do git --no-pager log -1 --date=short --pretty=format:"$f|%ci!" -- $f ; done) >> $GITHUB_ENV
      - name: Test imgs
        run: echo $IMGS_DATES
      - name: Generate imgs Directory Listings
        uses: dieseltravis/github-pages-directory-listing@dieseltravis-html
        with:
          FOLDER: 'imgs'      #directory to generate index
          GIF_DATES: ${{ env.IMGS_DATES }}
      - name: Set emojis env
        run: echo EMOJIS_DATES=$(for f in $(git ls-files emojis/*.*); do git --no-pager log -1 --date=short --pretty=format:"$f|%ci!" -- $f ; done) >> $GITHUB_ENV
      - name: Test emojis
        run: echo $EMOJIS_DATES
      - name: Generate emojis Directory Listings
        uses: dieseltravis/github-pages-directory-listing@dieseltravis-html
        with:
          FOLDER: 'imgs'      #directory to generate index
          GIF_DATES: ${{ env.EMOJIS_DATES }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
  # Single deploy job since we're just deploying
  deploy:
    needs: pages-directory-listing
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


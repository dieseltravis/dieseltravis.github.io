{"relativePath":"/posts/2010/07/26/embedding-an-xslt-as-a-string-in-a-dll-binary","comments":"","pubDate":"2010-07-26T14:00:05.852-04:00","title":"Embedding an XSLT as a string in a DLL binary","subtitle":"","intro":"","categories":["programming","xml/xslt/xpath"],"body":"&lt;a href=&quot;http://www.flickr.com/photos/diesel_travis/4819182556/sizes/o/in/photostream/&quot; style=&quot;display:block;float:right;&quot;&gt;&lt;img src=&quot;http://farm5.static.flickr.com/4082/4819182556_7eefd75c20_d.jpg&quot; width=&quot;500&quot; height=&quot;233&quot; alt=&quot;Project Properties - Resources&quot; style=&quot;display:block;&quot; /&gt;&lt;/a&gt;&lt;p&gt;If you want to distribute a class library that relies on an XSL document and only want to worry about a single DLL then this is probably the easiest solution. In Visual Studio follow these commands (and save): Project Properties → Resources → Add Existing file&lt;/p&gt;&lt;p&gt;In this case, I am embedding a file named &lt;var&gt;Core.xsl&lt;/var&gt; with a key named &lt;var&gt;Core&lt;/var&gt;. That will generate a bit of code that looks like this:&lt;/p&gt;&lt;h4&gt;~/Properties/Resources.resx:&lt;/h4&gt;&lt;pre class=&quot;xml&quot; style=&quot;clear:both;&quot;&gt;&amp;lt;data name=&quot;Core&quot; type=&quot;System.Resources.ResXFileRef, System.Windows.Forms&quot;&amp;gt;	&amp;lt;value&amp;gt;..\Resources\Core.xsl;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8&amp;lt;/value&amp;gt;&amp;lt;/data&amp;gt;&lt;/pre&gt;&lt;h4&gt;~/Properties/Resources.Designer.cs:&lt;/h4&gt;&lt;pre class=&quot;cs&quot; style=&quot;clear:both;&quot;&gt;public static string Core {	get {		return ResourceManager.GetString(&quot;Core&quot;, resourceCulture);	}}&lt;/pre&gt;&lt;img src=&quot;http://farm5.static.flickr.com/4078/4818559695_a00bb0862a_d.jpg&quot; width=&quot;474&quot; height=&quot;264&quot; alt=&quot;XSL file properties&quot; style=&quot;clear: left; float: right;&quot; /&gt;&lt;p&gt;Be sure to set the properties of the file so that its &lt;var&gt;Build Action&lt;/var&gt; is set as an &lt;code&gt;Embedded Resource&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Now when you compile, the entire contents of the XSL file get embedded directly into the DLL as a string. You can now use the new property like this:&lt;/p&gt;&lt;pre class=&quot;cs&quot; style=&quot;clear:both;&quot;&gt;public static XslCompiledTransform GetXsl(XmlDocument xDoc){	bool enableDocumentFunction = false;	bool enableScript = true;	XsltSettings xslSettings = new XsltSettings(enableDocumentFunction, enableScript);	// only enable debugging in DEBUG mode	bool isDebug = true;#if (!DEBUG)	isDebug = false;#endif	XslCompiledTransform xsl = new XslCompiledTransform(isDebug);	xsl.Load(xDoc, xslSettings, new XmlUrlResolver());	return xsl;}public static XslCompiledTransform GetXsl(){	XmlDocument xDoc = new XmlDocument();	xDoc.LoadXml(Properties.Resources.Core);	XslCompiledTransform xsl = GetXsl(null, xDoc);	return xsl;}&lt;/pre&gt;&lt;h4&gt;Previous XSLT stuff:&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://travis.servebeer.com/blog.net/2010/07/19/Compiling+An+XSLT+Into+A+DLL+Binary.aspx&quot;&gt;Compiling An XSLT Into A DLL Binary&lt;/a&gt;&lt;/p&gt;","enclosures":[],"source":{"url":"","title":""},"changefreq":"never","priority":"0.1","bodyArticleHtml":"<hgroup><h3><time datetime=\"2010-07-26T18:00:05.852Z\" pubdate=\"pubdate\">2010-07-26</time></h3><h1><a href=\"http://dieseltravis.github.io/posts/2010/07/26/embedding-an-xslt-as-a-string-in-a-dll-binary\">Embedding an XSLT as a string in a DLL binary</a></h1><h2></h2></hgroup><a href="http:<p>IfyouwanttodistributeaclasslibrarythatreliesonanXSLdocumentandonlywanttoworryaboutasingleDLLthenthisisprobablytheeasiestsolution.InVisualStudiofollowthesecommands(andsave):ProjectProperties→Resources→AddExistingfile</p><p>Inthiscase,Iamembeddingafilenamed<var>Core.xsl</var>withakeynamed<var>Core</var>.Thatwillgenerateabitofcodethatlookslikethis:</p><h4>~/Properties/Resources.resx:</h4><preclass="xml"style="clear:both;">&lt;dataname="Core"type="System.Resources.ResXFileRef, System.Windows.Forms"&gt;&lt;value&gt;..\Resources\Core.xsl;System.String,mscorlib,Version=2.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089;utf-8&lt;/value&gt;&lt;/data&gt;</pre><h4>~/Properties/Resources.Designer.cs:</h4><preclass="cs"style="clear:both;">publicstaticstringCore{get{returnResourceManager.GetString("Core",resourceCulture);}}</pre><imgsrc="http://farm5.static.flickr.com/4078/4818559695_a00bb0862a_d.jpg"width="474"height="264"alt="XSL file properties"style="clear: left; float: right;"/><p>Besuretosetthepropertiesofthefilesothatits<var>BuildAction</var>issetasan<code>EmbeddedResource</code>.</p><p>Nowwhenyoucompile,theentirecontentsoftheXSLfilegetembeddeddirectlyintotheDLLasastring.Youcannowusethenewpropertylikethis:</p><preclass="cs"style="clear:both;">publicstaticXslCompiledTransformGetXsl(XmlDocumentxDoc){boolenableDocumentFunction=false;boolenableScript=true;XsltSettingsxslSettings=newXsltSettings(enableDocumentFunction,enableScript);boolisDebug=true;#if(!DEBUG)isDebug=false;#endifXslCompiledTransformxsl=newXslCompiledTransform(isDebug);xsl.Load(xDoc,xslSettings,newXmlUrlResolver());returnxsl;}publicstaticXslCompiledTransformGetXsl(){XmlDocumentxDoc=newXmlDocument();xDoc.LoadXml(Properties.Resources.Core);XslCompiledTransformxsl=GetXsl(null,xDoc);returnxsl;}</pre><h4>PreviousXSLTstuff:</h4><p><ahref="http://travis.servebeer.com/blog.net/2010/07/19/Compiling+An+XSLT+Into+A+DLL+Binary.aspx">CompilingAnXSLTIntoADLLBinary</a></p>",	"bodyNavItems": [								{									"pageRel": "prev",								"href": "/posts/2014/04/05/frost-pisst",				"text": "FrostPisst"			}					, 			{									"pageRel": "prev",								"href": "/posts/2011/05/13/adding-an-easy-shortcut-to-the-jshint-javascript-validator-to-visual-studio",				"text": "AddingAnEasyShortcuttotheJSHintjavascriptvalidatortoVisualStudio"			}					, 			{									"pageRel": "self",								"href": "/posts/2010/07/26/embedding-an-xslt-as-a-string-in-a-dll-binary",				"text": "EmbeddinganXSLTasastringinaDLLbinary"			}					, 			{									"pageRel": "next",								"href": "/posts/2010/07/19/compiling-an-xslt-into-a-dll-binary",				"text": "CompilinganXSLTintoaDLLbinary"			}					, 			{								"href": "/posts/2009/08/31/adding-an-easy-shortcut-to-the-jslint-javascript-validator-to-visual-studio",				"text": "AddingAnEasyShortcuttotheJSLintjavascriptvalidatortoVisualStudio"			}			]}